name: Example workflow for Codecov
on: [push]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10']
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@master
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - name: Generate coverage report
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        python -m poetry install --no-root
        poetry run python -m pytest -v --cov-report=xml --cov=pyskoptimize tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
  deploy:
    needs: [test]
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m pip install poetry-dynamic-versioning-plugin
          poetry publish --no-interaction --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}